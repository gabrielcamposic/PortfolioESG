<p>Este proyecto está construido con Python, aprovechando varias bibliotecas estándar comúnmente utilizadas en el análisis de datos y la computación científica. Aquí están algunas de las tecnologías y conceptos clave involucrados:</p>
<ul>
    <li><strong>Lenguaje Principal:</strong> Python 3.x</li>
    <li><strong>Manejo de Datos e Interacción Externa:</strong>
        <ul>
            <li><code>yfinance</code>: Usado para obtener datos históricos de acciones.</li>
            <li><code>requests</code>: Para gestionar conexiones HTTP, incluyendo el manejo de reintentos para una obtención de datos más fiable.</li>
            <li><code>fake_useragent</code>: Ayuda a generar user-agents para las solicitudes, lo que puede ser útil al interactuar con fuentes web.</li>
            <li><code>holidays</code>: Usado para identificar festivos específicos del mercado, asegurando que los datos se recopilen para días de negociación reales.</li>
        </ul>
    </li>
    <li><strong>Manipulación y Análisis de Datos:</strong>
        <ul>
            <li><code>pandas</code>: Fundamental para manejar y manipular los datos financieros, incluyendo la lectura/escritura de CSVs y operaciones de series temporales.</li>
            <li><code>numpy</code>: Usado para cálculos numéricos, particularmente en los cálculos matemáticos para el rendimiento de la cartera (rendimientos, volatilidad).</li>
        </ul>
    </li>
    <li><strong>Optimización y Algoritmos:</strong>
        <ul>
            <li>El proyecto implementa conceptos de la <strong>Teoría Moderna de Carteras (MPT)</strong>.</li>
            <li>La <strong>Simulación de Monte Carlo</strong> se utiliza para evaluar el rendimiento potencial de la cartera probando ponderaciones aleatorias.</li>
            <li>Se implementa una búsqueda por <strong>Fuerza Bruta</strong> personalizada para tamaños de cartera más pequeños.</li>
            <li>Se utiliza un <strong>Algoritmo Genético (AG)</strong> personalizado como método de búsqueda heurística para tamaños de cartera más grandes, incluyendo implementaciones básicas de selección, cruce y mutación.</li>
        </ul>
    </li>
    <li><strong>Estructura de Código y Utilidades:</strong>
        <ul>
            <li><strong>Programación Orientada a Objetos (POO):</strong> Se utilizan clases como <code>Logger</code> y <code>ExecutionTimer</code> para organizar funcionalidades específicas.</li>
            <li><strong>Parametrización:</strong> Se utilizan archivos de texto externos para la configuración, facilitando la modificación de ajustes sin editar el código.</li>
            <li><strong>Logging:</strong> Logger personalizado para salida detallada en consola, registro en archivo y actualizaciones JSON para monitorización de progreso basada en web.</li>
            <li><code>json</code>: Para leer/escribir datos JSON, particularmente para actualizaciones de progreso y listas de omisión.</li>
            <li><code>datetime</code>, <code>time</code>: Para manejar fechas, horas y mediciones de rendimiento.</li>
            <li><code>os</code>, <code>shutil</code>: Para operaciones de archivo y directorio.</li>
            <li><code>itertools</code>, <code>math</code>: Usado para cálculos combinatorios y otras necesidades matemáticas.</li>
        </ul>
    </li>
    <li><strong>Enfoque de Desarrollo y Asistencia de IA:</strong>
        <ul>
            <li>El desarrollo de este proyecto fue significativamente acelerado y mejorado mediante el uso de asistentes de codificación impulsados por IA, incluyendo <strong>Gemini de Google</strong>, <strong>ChatGPT de OpenAI</strong> y <strong>Microsoft CoPilot</strong>. Estas herramientas fueron fundamentales en la lluvia de ideas de soluciones, generación de código base, depuración y exploración de algoritmos complejos, demostrando un enfoque moderno de la ingeniería de software.</li>
        </ul>
    </li>
</ul>
<p>El diseño se centra en mantener el manejo de datos separado del motor de análisis, buscando una estructura clara y modular que sea más fácil de entender y potencialmente modificar.</p>