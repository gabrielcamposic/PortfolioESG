<ul>
    <li><strong>Data-Driven Insights:</strong> Relies on historical market data for all analyses and portfolio construction.</li>
    <li><strong>Highly Configurable:</strong> Utilizes external parameter files (<code>downpar.txt</code>, <code>simpar.txt</code>) for easy customization of data sources, simulation settings, stock lists (e.g., ESG criteria), risk-free rates, and portfolio size constraints without code modification.</li>
    <li><strong>Risk-Aware Optimization:</strong> Primarily aims to maximize the Sharpe Ratio, effectively balancing expected return with portfolio risk (volatility).</li>
    <li><strong>Advanced Search Techniques:</strong>
        <ul>
            <li>Employs a <strong>Brute-Force</strong> search for smaller portfolios to ensure all combinations are considered.</li>
            <li>Utilizes <strong>Genetic Algorithms (GA)</strong> for larger portfolios to efficiently navigate vast search spaces.</li>
            <li>Leverages <strong>Monte Carlo simulations</strong> to explore numerous random weighting schemes for each stock combination.</li>
        </ul>
    </li>
    <li><strong>Adaptive & Efficient Engine:</strong> Incorporates intelligent strategies to optimize computational effort, including early discarding of unpromising candidates and dynamic adjustment of simulation intensity.</li>
    <li><strong>Comprehensive Logging & Monitoring:</strong>
        <ul>
            <li>Detailed text logs for tracking script progress, decisions, and errors.</li>
            <li>Performance logs to measure the efficiency of data download and optimization phases.</li>
            <li>Web-accessible JSON files (<code>progress.json</code>) for near real-time monitoring of script execution status and key metrics.</li>
            <li>CSV outputs for the best portfolio found, its historical value, and GA performance metrics.</li>
        </ul>
    </li>
    <li><strong>Modular Design:</strong> Clear separation between data acquisition (<code>Download.py</code>) and optimization logic (<code>Engine.py</code>) enhances clarity, maintainability, and scalability.</li>
    <li><strong>Market-Specific Data Handling:</strong> Accounts for business days and local holidays (e.g., SÃ£o Paulo, Brazil) for accurate historical data retrieval.</li>
    <li><strong>Resilient Data Downloading:</strong> Features user-agent rotation and request retries to improve the reliability of fetching data from online sources.</li>
</ul>
